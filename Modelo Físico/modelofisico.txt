-- =====================================================
-- BANCO DE DADOS: ECOMMERCE_DB
-- Autor: Matheus Spilmam
-- Descrição: Modelo físico do sistema de e-commerce
-- Data: 2025
-- Banco: MySQL
-- =====================================================

-- Criação do banco de dados
CREATE DATABASE IF NOT EXISTS ecommerce_db;
USE ecommerce_db;

-- =====================================================
-- TABELA: CLIENTES
-- =====================================================
CREATE TABLE clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    telefone VARCHAR(20),
    cpf VARCHAR(14) NOT NULL UNIQUE,
    data_cadastro DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- =====================================================
-- TABELA: ENDERECOS
-- =====================================================
CREATE TABLE enderecos (
    id_endereco INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT NOT NULL,
    logradouro VARCHAR(150) NOT NULL,
    numero VARCHAR(10),
    complemento VARCHAR(50),
    bairro VARCHAR(100),
    cidade VARCHAR(100),
    estado CHAR(2),
    cep VARCHAR(9),
    tipo_endereco VARCHAR(20),
    CONSTRAINT fk_endereco_cliente
        FOREIGN KEY (id_cliente) REFERENCES clientes(id_cliente)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- =====================================================
-- TABELA: CATEGORIAS
-- =====================================================
CREATE TABLE categorias (
    id_categoria INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT
);

-- =====================================================
-- TABELA: PRODUTOS
-- =====================================================
CREATE TABLE produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    id_categoria INT NOT NULL,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10,2) NOT NULL,
    estoque INT DEFAULT 0,
    ativo BOOLEAN DEFAULT TRUE,
    CONSTRAINT fk_produto_categoria
        FOREIGN KEY (id_categoria) REFERENCES categorias(id_categoria)
        ON DELETE RESTRICT
        ON UPDATE CASCADE
);

-- =====================================================
-- TABELA: PEDIDOS
-- =====================================================
CREATE TABLE pedidos (
    id_pedido INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT NOT NULL,
    data_pedido DATETIME DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'Pendente',
    valor_total DECIMAL(10,2) DEFAULT 0.00,
    CONSTRAINT fk_pedido_cliente
        FOREIGN KEY (id_cliente) REFERENCES clientes(id_cliente)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- =====================================================
-- TABELA: ITENS DO PEDIDO
-- =====================================================
CREATE TABLE itens_pedido (
    id_item INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT NOT NULL,
    id_produto INT NOT NULL,
    quantidade INT NOT NULL,
    preco_unitario DECIMAL(10,2) NOT NULL,
    subtotal DECIMAL(10,2) GENERATED ALWAYS AS (quantidade * preco_unitario) STORED,
    CONSTRAINT fk_item_pedido
        FOREIGN KEY (id_pedido) REFERENCES pedidos(id_pedido)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT fk_item_produto
        FOREIGN KEY (id_produto) REFERENCES produtos(id_produto)
        ON DELETE RESTRICT
        ON UPDATE CASCADE
);

-- =====================================================
-- TABELA: PAGAMENTOS
-- =====================================================
CREATE TABLE pagamentos (
    id_pagamento INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT NOT NULL UNIQUE,
    metodo_pagamento VARCHAR(50) NOT NULL,
    valor_pago DECIMAL(10,2) NOT NULL,
    data_pagamento DATETIME DEFAULT CURRENT_TIMESTAMP,
    status_pagamento VARCHAR(20) DEFAULT 'Pendente',
    CONSTRAINT fk_pagamento_pedido
        FOREIGN KEY (id_pedido) REFERENCES pedidos(id_pedido)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

-- =====================================================
-- INSERÇÃO DE DADOS EXEMPLO
-- =====================================================
INSERT INTO categorias (nome, descricao)
VALUES ('Eletrônicos', 'Dispositivos eletrônicos e acessórios'),
       ('Roupas', 'Vestuário masculino e feminino'),
       ('Livros', 'Obras literárias e educacionais');

INSERT INTO clientes (nome, email, telefone, cpf)
VALUES ('João Silva', 'joao@email.com', '49999999999', '123.456.789-10'),
       ('Maria Souza', 'maria@email.com', '48988888888', '987.654.321-00');

INSERT INTO produtos (id_categoria, nome, descricao, preco, estoque)
VALUES (1, 'Fone Bluetooth', 'Fone sem fio com cancelamento de ruído', 199.90, 30),
       (2, 'Camiseta Preta', 'Camiseta 100% algodão', 59.90, 100),
       (3, 'Livro: Dom Casmurro', 'Clássico de Machado de Assis', 39.90, 50);

-- =====================================================
-- CONSULTAS BÁSICAS
-- =====================================================

-- Listar clientes e seus pedidos
SELECT c.nome, p.id_pedido, p.status, p.valor_total
FROM clientes c
JOIN pedidos p ON c.id_cliente = p.id_cliente;

-- Listar produtos e suas categorias
SELECT p.nome AS produto, c.nome AS categoria, p.preco
FROM produtos p
JOIN categorias c ON p.id_categoria = c.id_categoria;

-- =====================================================
-- FIM DO SCRIPT
-- =====================================================
